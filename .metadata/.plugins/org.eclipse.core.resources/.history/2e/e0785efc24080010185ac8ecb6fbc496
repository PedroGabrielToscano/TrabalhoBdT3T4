package services;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import database.PostgresDatabaseConnection;
import models.UnidadeFederacao;

public class UnidadeFederacaoService {
    public int cadastrarUnidadeFederacao(UnidadeFederacao uf) throws SQLException {
        String sql = "INSERT INTO Unidade_Federacao (NomeUF) VALUES (?)";
        try (Connection conn = PostgresDatabaseConnection.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS)) {
            ps.setString(1, uf.getNomeUF());
            ps.executeUpdate();
            try (ResultSet rs = ps.getGeneratedKeys()) {
                if (rs.next()) {
                    int id = rs.getInt(1);
                    uf.setIdUF(id);
                    return id;
                } else {
                    throw new SQLException("Erro ao cadastrar Unidade Federativa, não foi possível obter o ID.");
                }
            }
        }
    }
    public List<UnidadeFederacao> listarUFs() throws SQLException {
        List<UnidadeFederacao> lista = new ArrayList<>();
        String sql = "SELECT iduf, nomeuf FROM unidade_federacao";
        try (Connection conn = PostgresDatabaseConnection.getConnection();
             Statement st = conn.createStatement();
             ResultSet rs = st.executeQuery(sql)) {
            while (rs.next()) {
                UnidadeFederacao uf = new UnidadeFederacao();
                uf.setIdUF(rs.getInt("iduf"));
                uf.setNomeUF(rs.getString("nomeuf"));
                lista.add(uf);
            }
        }
        return lista;
    }

}
